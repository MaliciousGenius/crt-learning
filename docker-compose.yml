version: '2.1'

x-crt-learning-build-opts: &x-crt-learning-build-opts
  build:
    context: ./crt-learning

x-logging-opts: &x-logging-opts
  logging:
    driver: 'json-file'
    options:
      max-size: '20M'
      max-file: '5'

services:

  clickhouse:
    <<: *x-logging-opts
    image: yandex/clickhouse-server
    container_name: ${NAME}-clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - '8123:8123/tcp'
      - '9000:9000/tcp'
      - '9363:9363/tcp'
    volumes:
      - ./ch-conf:/etc/clickhouse-server:ro
      - ./ch-data:/var/lib/clickhouse:rw
      - ./ch-log:/var/log/clickhouse-server:rw
    healthcheck:
      test: "clickhouse-client --port=9000 --query='SELECT 1'"
      interval: 5s
      timeout: 30s
      retries: 10

  # prometheus:
  #   <<: *x-logging-opts
  #   image: prom/prometheus
  #   container_name: ${NAME}-prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   ports:
  #     - '9090:9090/tcp'
  #   volumes:
  #     - ./pr-conf:/etc/prometheus:ro
  #     - ./pr-data:/prometheus:rw

  # redis:
  #   <<: *x-logging-opts
  #   image: redis
  #   container_name: ${NAME}-redis
  #   ports:
  #     - '6379:6379/tcp'
  #   volumes:
  #     - ./redis-data:/data:rw

  # postgres:
  #   <<: *x-logging-opts
  #   image: postgres
  #   container_name: ${NAME}-postgres
  #   environment:
  #     POSTGRES_DB: superset
  #     POSTGRES_PASSWORD: superset
  #     POSTGRES_USER: superset
  #   ports:
  #     - '5432:5432/tcp'
  #   volumes:
  #     - ./pg-data:/var/lib/postgresql/data

  # superset:
  #   <<: *x-logging-opts
  #   image: amancevice/superset
  #   container_name: ${NAME}-superset
  #   environment:
  #     POSTGRES_DB: superset
  #     POSTGRES_USER: superset
  #     POSTGRES_PASSWORD: superset
  #     POSTGRES_HOST: postgres
  #     POSTGRES_PORT: 5432
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     SUPERSET_ENV: local
  #   # command: ["flask", "run", "-p", "8088", "--with-threads", "--reload", "--debugger", "--host=0.0.0.0"]
  #   ports:
  #     - 8088:8088
  #   depends_on:
  #     - postgres
  #     - redis

  crt-learning:
    <<: *x-crt-learning-build-opts
    <<: *x-logging-opts
    container_name: ${NAME}
    environment:
      - CLICKHOUSE_HOST=clickhouse
    volumes:
      - ./crt-scripts:/crt-scripts
